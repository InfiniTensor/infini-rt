# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# rust-clippy is a tool that runs a bunch of lints to catch common
# mistakes in your Rust code and help improve your Rust code.
# More details at https://github.com/rust-lang/rust-clippy
# and https://rust-lang.github.io/rust-clippy/

name: CI

on:
  pull_request:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'

jobs:
  rust-clippy-analyze:
    name: Run rust-clippy analyzing
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check format
        run: cargo fmt --check

      - name: Checkout infini-op
        uses: actions/checkout@v4
        with:
          repository: PanZezhong1725/operators
          ref: dev
          path: ffi/infini-op

      - name: Checkout infini-rt
        uses: actions/checkout@v4
        with:
          repository: PanZezhong1725/infer.cc
          ref: main
          path: ffi/infini-rt

      - name: Install xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Install infini-op
        run: |
          cd ffi/infini-op
          xmake f --cpu=true
          xmake
          xmake install

      - name: Install infini-rt
        run: |
          cd ffi/infini-rt
          xmake f --ccl=false --infer=false
          xmake
          xmake install

      - name: Set env for windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: echo "$env:HOMEPATH/.infini/bin" >> $env:GITHUB_PATH

      - name: Cargo test
        run: cargo test

      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Run rust-clippy
        run:
          cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true
